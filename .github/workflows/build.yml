name: Build
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubunto-latest]
        include:
          # - os: windows-latest
            # vcpkgCommitId: '${{ env.VCPKG_COMMIT_ID }}'
          - os: ubuntu-latest
            vcpkgCommitId: 253704407ae68efa37bf8f5b59b3e06dd40d3d3f
          # - os: macos-latest
            # vcpkgCommitId: ''${{ env.VCPKG_COMMIT_ID }}'

    steps:
      - uses: actions/checkout@v3

      - name: List $RUNNER_WORKSPACE
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: vcpkg restore/run
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          runVcpkgInstall: true
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          vcpkgJsonGlob: '**/cmake/vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: vcpkg output
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}