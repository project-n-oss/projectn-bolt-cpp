name: Build
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest]
        include:
          # - os: windows-latest
            # vcpkgCommitId: '${{ env.VCPKG_COMMIT_ID }}'
          - os: ubuntu-latest
            aws-sdk-commit-hash: f14984af3738e69f197bf0e647a8dca12de92996
          - os: macos-latest
            vcpkgCommitId: ''${{ env.VCPKG_COMMIT_ID }}'

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Linux apt-get
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev libpulse-dev
      
      - name: aws-sdk-cpp commit hash
        run: |
          cd ${{github.workspace}}/aws-sdk-cpp
          echo "AWS_COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV 

      - uses: actions/cache/restore@v3
        id: cache
        with:
          path: ${{github.workspace}}/sdk_build
          key: ${{ runner.os }}-aws-sdk-cpp-commit-${{ env.AWS_COMMIT_HASH }}

      - name: Build aws-sdk-cpp
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir ${{github.workspace}}/sdk_build
          cd ${{github.workspace}}/sdk_build
          cmake ../aws-sdk-cpp -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=${{github.workspace}}/sdk_build/ -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/sdk_build/ -DBUILD_ONLY="s3"
          make
          make install

      - uses: actions/cache/save@v3
        id: cache-save
        with:
          path: ${{github.workspace}}/sdk_build
          key: ${{ runner.os }}-aws-sdk-cpp-commit-${{ env.AWS_COMMIT_HASH }}

      - name: Configure CMake
        run: |
          cd ${{github.workspace}}
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=${{github.workspace}}/sdk_build/

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
      - name: CPack
        run: CPack -G ZIP
      
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-package-commit-$GITHUB_SHA
          path: ${{github.workspace}}/_packages/projectn?.zip
          if-no-files-found: error